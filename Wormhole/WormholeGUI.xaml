<UserControl x:Class="Wormhole.GUI"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d">
    <StackPanel MinWidth="500" MaxWidth="1000">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Column="0" Grid.Row ="0" VerticalAlignment="Center" HorizontalAlignment="left" Text="Wormhole" FontWeight="Bold" FontSize="16" Margin="5"/>
            <Button Grid.Column="1" Grid.Row="0" MaxWidth="100" Content="Save Config" Margin="5" Click="SaveButton_OnClick" HorizontalAlignment="Right"></Button>
        </Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <TabControl x:Name="tabControl" HorizontalAlignment="Left">
                <TabItem>
                    <TabItem.Header>Global Settings</TabItem.Header>
                    <StackPanel MinWidth="500" Width="{Binding ElementName=wideboi, Path=ActualWidth}" MaxWidth="1000">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="300"/>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock   Grid.Column="0" Grid.Row ="1"  VerticalAlignment="Center" Text="Server IP:Port (for reconnecting)" Margin="5,6" Height="16" Grid.ColumnSpan="2"/>
                            <TextBox     Grid.Column="1" Grid.Row ="1"  Name="ThisIp" Margin="5" Text="{Binding ThisIp}" Grid.ColumnSpan="2"/>
                            <TextBlock   Grid.Column="0" Grid.Row ="2"  VerticalAlignment="Center" Text="Folder (a shared folder across all torchs)" Margin="5,6" Height="16" Grid.ColumnSpan="2"/>
                            <TextBox     Grid.Column="1" Grid.Row ="2"  Name="Folder" Margin="5" Text="{Binding Folder}" Grid.ColumnSpan="2"/>
                            <TextBlock   Grid.Column="0" Grid.Row ="3" VerticalAlignment="Center" Text="Wormhole runs once out of x ticks" Margin="5,6" Height="16" Grid.ColumnSpan="2"/>
                            <TextBox     Grid.Column="1" Grid.Row ="3" Name="Tick" Margin="5" Text="{Binding Tick}" Grid.ColumnSpan="2"/>
                            <TextBlock   Grid.Column="0" Grid.Row ="4" VerticalAlignment="Center" Text="Respawn Player in Seat" Margin="5,6" Height="16" Grid.ColumnSpan="2"/>
                            <CheckBox    Grid.Column="1" Grid.Row ="4" Name="PlayerRespawn" Margin="5" IsChecked="{Binding PlayerRespawn}"/>
                            <TextBlock   Grid.Column="0" Grid.Row ="5" VerticalAlignment="Center" Text="Respawn Type" Margin="5,6" Height="16" Grid.ColumnSpan="2"/>
                            <RadioButton Grid.Column="1" Grid.Row ="5" GroupName="respawn" Margin="5" Name="RespawnTypeA" VerticalAlignment="Center" IsChecked="{Binding Path=PlayerRespawnType[0], Mode=TwoWay}">Aggressive</RadioButton>
                            <RadioButton Grid.Column="2" Grid.Row ="5" GroupName="respawn" Margin="5" Name="RespawnTypeP" VerticalAlignment="Center" IsChecked="{Binding Path=PlayerRespawnType[1], Mode=TwoWay}">Passive</RadioButton>
                            <TextBlock   Grid.Column="0" Grid.Row ="6" VerticalAlignment="Center" Text="Save Server On Grid Exit (Warning May Cause Lag)" Margin="5,6" Height="16" Grid.ColumnSpan="2"/>
                            <CheckBox    Grid.Column="1" Grid.Row ="6" Name="SaveOnExit" Margin="5" IsChecked="{Binding SaveOnExit}"/>
                            <TextBlock   Grid.Column="0" Grid.Row ="7" VerticalAlignment="Center" Text="Save Server On Grid Enter (Warning May Cause Lag)" Margin="5,6" Height="16" Grid.ColumnSpan="2"/>
                            <CheckBox    Grid.Column="1" Grid.Row ="7" Name="SaveOnEnter" Margin="5" IsChecked="{Binding SaveOnEnter}"/>
                            <TextBlock   Grid.Column="0" Grid.Row ="8" VerticalAlignment="Center" Text="Grid Backup" Margin="5,6" Height="16" Grid.ColumnSpan="2"/>
                            <CheckBox    Grid.Column="1" Grid.Row ="8" Name="GridBackup" Margin="5" IsChecked="{Binding GridBackup}"/>
                            <TextBlock   Grid.Column="0" Grid.Row ="9" VerticalAlignment="Center" Text="Days To Save Backup Grids" Margin="5,6" Height="16" Grid.ColumnSpan="2"/>
                            <TextBox     Grid.Column="1" Grid.Row ="9" Name="DaysToSaveGrids" Margin="5" Text="{Binding Folder}" Grid.ColumnSpan="2"/>
                        </Grid>
                    </StackPanel>
                </TabItem>
                <TabItem>
                    <TabItem.Header>Cross Cluster</TabItem.Header>
                    <StackPanel MinWidth="500" Width="1000" MaxWidth="1000">
                        <TextBlock>This is beta it has no incoming limit yet still it holds many fun possibilities</TextBlock>

                    </StackPanel>
                </TabItem>
                <TabItem>
                    <TabItem.Header>Random Moving Gate</TabItem.Header>
                    <StackPanel MinWidth="500" Width="1000" MaxWidth="1000">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto" MinWidth="200"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Column="0" Grid.Row="12" VerticalAlignment="Center" Text="Random Moving Gates" FontWeight="Bold" Margin="5,6" />
                            <TextBlock Grid.Column="0" Grid.Row ="13" VerticalAlignment="Center" Text="Random Moving Gate Radius" Margin="5,6" Height="16"/>
                            <TextBox Name="RandomMovingGateRadius" Grid.Column="1" Grid.Row ="13" Margin="5" Text="{Binding RandomMovingGateRadius}"/>
                            <TextBlock Grid.Column="0" Grid.Row ="14" VerticalAlignment="Center" Text="Random Moving Gate X,Y,Z Center" Margin="5,6" Height="16"/>
                            <TextBox Name="RandomMovingGateXYZ" Grid.Column="1" Grid.Row ="14" Margin="5" Text="{Binding RandomMovingGateXYZ}"/>
                            <TextBlock Grid.Column="0" Grid.Row ="15" VerticalAlignment="Center" Text="Random Moving Gate Hide Till Found" Margin="5,6" Height="16"/>
                            <CheckBox Name="RandomMovingGateHideTillFound" Grid.Column="1" Grid.Row ="15" Margin="5" IsChecked="{Binding RandomMovingGateHideTillFound}"/>
                            <TextBlock Grid.Column="0" Grid.Row ="16" VerticalAlignment="Center" Text="Random Moving Gate Discovery Radius" Margin="5,6" Height="16"/>
                            <TextBox Name="RandomMovingGateDiscoveryRadius" Grid.Column="1" Grid.Row ="16" Margin="5" Text="{Binding RandomMovingGateDiscoveryRadius}"/>
                            <TextBlock Grid.Column="0" Grid.Row ="17" VerticalAlignment="Center" Text="Random Moving Gate Move Ever X Hours" Margin="5,6" Height="16"/>
                            <TextBox Name="RandomMovingGateMoveEverXHours" Grid.Column="1" Grid.Row ="17" Margin="5" Text="{Binding RandomMovingGateMoveEverXHours}"/>
                            <StackPanel Grid.Row="0" Grid.Column="2" Grid.RowSpan="8">
                                <!-- Extra Space to use later -->
                            </StackPanel>
                        </Grid>

                    </StackPanel>
                </TabItem>
                <TabItem>
                    <TabItem.Header>Admin Gates</TabItem.Header>
                    <StackPanel MinWidth="500" Width="1000" MaxWidth="1000">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto" MinWidth="200"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Column="0" Grid.Row ="1" VerticalAlignment="Center" Text="Allow Faction Members" Margin="5,7" Height="16"/>
                            <CheckBox Name="AllowInFaction" Grid.Column="1" Grid.Row ="1" Margin="5" IsChecked="{Binding AllowInFaction}"/>
                            <TextBlock Grid.Column="0" Grid.Row ="3" VerticalAlignment="Center" Text="Keep grids linked by connector" Margin="5" Height="16"/>
                            <CheckBox Name="IncludeConnectedGrids" Grid.Column="1" Grid.Row ="3" Margin="5" IsChecked="{Binding IncludeConnectedGrids}"/>
                            <TextBlock Grid.Column="0" Grid.Row ="4" VerticalAlignment="Center" Text="Keep projector blueprints" Margin="5" Height="16"/>
                            <CheckBox Name="ExportProjectorBlueprints" Grid.Column="1" Grid.Row ="4" Margin="5" IsChecked="{Binding ExportProjectorBlueprints}"/>
                            <TextBlock Grid.Column="0" Grid.Row ="5" VerticalAlignment="Center" Text="SubtypeId of your jumpdrive" Margin="5,6" Height="16"/>
                            <TextBox Name="JumpDriveSubid" Grid.Column="1" Grid.Row ="5" Margin="5" Text="{Binding JumpDriveSubid}"/>
                            <TextBlock Grid.Column="0" Grid.Row ="6" VerticalAlignment="Center" Text="Work With All Jump Drives" Margin="5,6" Height="16"/>
                            <CheckBox Name="WorkWithAllJD" Grid.Column="1" Grid.Row ="6" Margin="5" IsChecked="{Binding WorkWithAllJD}"/>
                            <TextBlock Grid.Column="0" Grid.Row ="8" VerticalAlignment="Center" Text="Wormhole Radius" Margin="5,6" Height="16"/>
                            <TextBox Name="RadiusGate" Grid.Column="1" Grid.Row ="8" Margin="5" Text="{Binding RadiusGate}"/>
                            <TextBlock Grid.Column="0" Grid.Row ="11" VerticalAlignment="Center" Text="Auto Send if Single Send To (Disables Drives on Jump)" Margin="5,6" Height="16"/>
                            <CheckBox Name="AutoSend" Grid.Column="1" Grid.Row ="11" Margin="5" IsChecked="{Binding AutoSend}"/>
                            <StackPanel Grid.Row="0" Grid.Column="2" Grid.RowSpan="8">
                                <!-- Extra Space to use later -->
                            </StackPanel>
                        </Grid>
                        <Grid Margin="0,0,0,0" Width="{Binding ElementName=wideboi, Path=ActualWidth}" HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="0.5*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Button Grid.Column="4" Grid.Row="0" Content="Add" Grid.ColumnSpan="1" HorizontalAlignment="Stretch" Margin="5" Click="Add_OnClick"></Button>
                            <Button Grid.Column="5" Grid.Row="0" Content="Remove" Grid.ColumnSpan="1" HorizontalAlignment="Stretch" Margin="5" Click="Del_OnClick"></Button>
                            <Button Grid.Column="6" Grid.Row="0" Content="Edit" Grid.ColumnSpan="1" HorizontalAlignment="Stretch" Margin="5" Click="Edit_OnClick"></Button>
                            <TextBlock Grid.Column="0" Grid.Row ="1" HorizontalAlignment="Center" Text="Name" FontWeight="Bold" Margin="5"/>
                            <TextBlock Grid.Column="1" Grid.Row ="1" HorizontalAlignment="Center" Text="Description" FontWeight="Bold" Margin="5"/>
                            <TextBlock Grid.Column="2" Grid.Row ="1" HorizontalAlignment="Center" Text="HexColor" FontWeight="Bold" Margin="5"/>
                            <TextBlock Grid.Column="3" Grid.Row ="1" HorizontalAlignment="Center" Text="Send To Name:IP:Port" FontWeight="Bold" Margin="5"/>
                            <TextBlock Grid.Column="4" Grid.Row ="1" HorizontalAlignment="Center" Text="X" FontWeight="Bold" Margin="5"/>
                            <TextBlock Grid.Column="5" Grid.Row ="1" HorizontalAlignment="Center" Text="Y" FontWeight="Bold" Margin="5"/>
                            <TextBlock Grid.Column="6" Grid.Row ="1" HorizontalAlignment="Center" Text="Z" FontWeight="Bold" Margin="5"/>
                            <TextBlock Grid.Column="7" Grid.Row ="1" HorizontalAlignment="Center" Text="Rand" FontWeight="Bold" Margin="5"/>
                            <TextBox x:Name="Nameinput" Grid.Column="0" Grid.Row ="2" Margin="5" Height="100" TextWrapping="Wrap"/>
                            <TextBox x:Name="Descriptioninput" Grid.Column="1" Grid.Row ="2" Margin="5" Height="100" TextWrapping="Wrap"/>
                            <TextBox x:Name="HexColorinput" Grid.Column="2" Grid.Row ="2" Margin="5" Height="100" TextWrapping="Wrap"/>
                            <TextBox x:Name="SendToinput" Grid.Column="3" Grid.Row ="2" Margin="5" Height="100" TextWrapping="Wrap"/>
                            <TextBox x:Name="Xinput" Grid.Column="4" Grid.Row ="2" Margin="5" Height="100" TextWrapping="Wrap"/>
                            <TextBox x:Name="Yinput" Grid.Column="5" Grid.Row ="2" Margin="5" Height="100" TextWrapping="Wrap"/>
                            <TextBox x:Name="Zinput" Grid.Column="6" Grid.Row ="2" Margin="5" Height="100" TextWrapping="Wrap"/>
                            <CheckBox x:Name="Randinput" Grid.Column="7" Grid.Row ="2" Margin="5" HorizontalAlignment="Center"/>
                        </Grid>
                        <ListView x:Name="Listservers"  HorizontalAlignment="Stretch" Grid.ColumnSpan="10">
                            <ListView.View>
                                <GridView x:Name="Gridservers">
                                    <GridViewColumn Width="{Binding ElementName=NameHinput, Path=ActualWidth}" Header="Name" DisplayMemberBinding="{Binding Name}">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding Name, Mode=TwoWay}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding ElementName=DescriptionHinput, Path=ActualWidth}" Header="Description" DisplayMemberBinding="{Binding Description}">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding Name, Mode=TwoWay}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding ElementName=HexColorHinput, Path=ActualWidth}" Header="HexColor" DisplayMemberBinding="{Binding HexColor}">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding Name, Mode=TwoWay}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding ElementName=SendToHinput, Path=ActualWidth}" Header="Send To"  DisplayMemberBinding="{Binding SendTo}">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding SendTo, Mode=TwoWay}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding ElementName=XHinput, Path=ActualWidth}" Header="X"  DisplayMemberBinding="{Binding X}">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding X, Mode=TwoWay}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding ElementName=YHinput, Path=ActualWidth}" Header="Y"  DisplayMemberBinding="{Binding Y}">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding Y, Mode=TwoWay}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding ElementName=ZHinput, Path=ActualWidth}" Header="Z"  DisplayMemberBinding="{Binding Z}">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding Z, Mode=TwoWay}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding ElementName=RandHinput, Path=ActualWidth}" Header="Rand"  DisplayMemberBinding="{Binding Rand}">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <CheckBox IsChecked="{Binding Rand, Mode=TwoWay}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </StackPanel>
                </TabItem>
                <TabItem Header="Player Gates" Visibility="Visible">
                    <StackPanel MinWidth="500" Width="1000" MaxWidth="1000">
                        <TextBlock>ohhhh what is coming here i wonder...</TextBlock>
                    </StackPanel>
                </TabItem>
                <TabItem Header="Teleporting" Visibility="Visible">
                    <StackPanel MinWidth="500" Width="1000" MaxWidth="1000">
                        <TextBlock>ohhhh what is coming here i wonder...</TextBlock>
                    </StackPanel>
                </TabItem>
                <TabItem Header="Data Syncing" Visibility="Visible">
                    <StackPanel MinWidth="500" Width="1000" MaxWidth="1000">
                        <TextBlock>ohhhh what is coming here i wonder...</TextBlock>
                    </StackPanel>
                </TabItem>
            </TabControl>
        </Grid>
        <Grid Margin="0,30,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="300"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock TextAlignment="Right" Grid.Row="0" Grid.Column="0" Margin="5" TextWrapping="Wrap">Need help? Check out the Discord.</TextBlock>
            <Button Grid.Row="0" Grid.Column="1" Click="DiscordLink" Margin="5">https://discord.gg/zzxt2Zm</Button>
            <TextBlock TextAlignment="Right"  Grid.Row="1" Grid.Column="0" Margin="5" TextWrapping="Wrap">Like what you see?</TextBlock>
            <Button Grid.Row="1" Grid.Column="1" Margin="5"  Click="PatreonLink">https://www.patreon.com/PrincessKennyCoding</Button>
            <TextBlock TextAlignment="Right"  Grid.Row="2" Grid.Column="0" Margin="5" TextWrapping="Wrap">Checkout the Github for this project.</TextBlock>
            <Button Grid.Row="2" Grid.Column="1" Margin="5"  Click="GithubLink">https://github.com/AnthonyWalz/Wormhole-Master</Button>
            <TextBlock TextAlignment="Right"  Grid.Row="3" Grid.Column="0" Margin="5" TextWrapping="Wrap">A BIG thanks to LordTylus, the guy who makes the ALE plugins. Checkout his github. The guy does GREAT documentation so it's just the place to go if starting to learn to write plugins. I used some code from his ALE-Core.</TextBlock>
            <Button Grid.Row="3" Grid.Column="1" Margin="5"  Click="LordTylusGithubLink">https://github.com/LordTylus</Button>
        </Grid>
        <Grid Visibility="Hidden">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="0.5*"/>
                <ColumnDefinition Width="10"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="0"/>
            </Grid.RowDefinitions>
            <TextBox x:Name="wideboi" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="8"/>
            <TextBox x:Name="NameHinput" Grid.Column="0" Grid.Row ="1"/>
            <TextBox x:Name="DescriptionHinput" Grid.Column="1" Grid.Row ="1"/>
            <TextBox x:Name="HexColorHinput" Grid.Column="2" Grid.Row ="1"/>
            <TextBox x:Name="SendToHinput" Grid.Column="3" Grid.Row ="1"/>
            <TextBox x:Name="XHinput" Grid.Column="4" Grid.Row ="1"/>
            <TextBox x:Name="YHinput" Grid.Column="5" Grid.Row ="1"/>
            <TextBox x:Name="ZHinput" Grid.Column="6" Grid.Row ="1"/>
            <TextBox x:Name="RandHinput" Grid.Column="7" Grid.Row ="1"/>
        </Grid>
    </StackPanel>
</UserControl>
